import numpy as np
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn import metrics
# Reading the dataset
dataset = pd.read_csv('/content/PlayTennis.csv')
features = ['Outlook', 'Temperature', 'Humidity', 'Wind']
X = dataset[features]
Y = dataset['PlayTennis']
# One-hot encoding the features
encoder = OneHotEncoder(sparse=False, handle_unknown='ignore')
X_encoded = encoder.fit_transform(X)
# Splitting the dataset
X_train, X_test, y_train, y_test = train_test_split(X_encoded, Y, test_size=0.30, random_state=100)
# Building the decision tree
dtree = DecisionTreeClassifier(criterion="entropy", random_state=100)
dtree.fit(X_train, y_train)
# Predicting on the test set
y_pred = dtree.predict(X_test)
# Classifying a new instance based on the training data
def classify_new_instance(outlook, temperature, humidity, wind):
instance = [[outlook, temperature, humidity, wind]]
instance_encoded = encoder.transform(instance)
prediction = dtree.predict(instance_encoded)
return prediction[0]
# Predicting the class of a new instance
pred = classify_new_instance("Rain", "Mild", "High", "Strong")
print("Prediction:", pred)
accuracy = metrics.accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
